PART
{
	name = wbiAstriaPorta
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Blueshift/Parts/Utility/JumpGate/astriaPorta
		texture = WarpEngine, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/WarpEngine
		texture = WarpEngine1Emit, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/WarpEngine1Emit
		texture = Foil, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/Foil
		texture = FoilNrm, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/FoilNrm
		texture = FoilSpec, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/FoilSpec
	}

	node_stack_bottom = 0.0, -1.52014, 0.0, 0.0, -1.0, 0.0, 1

	NODE
	{
		name = Mount1
		transform = node001
		size = 2
	}

	NODE
	{
		name = Mount2
		transform = node002
		size = 2
	}

	rescaleFactor = 1
	TechRequired = wbiJumpTech
	entryCost = 35000000
	cost = 15000000
	category = Utility
	subcategory = 0
	title = Astria Porta
	manufacturer = <CLASSIFIED>
	description = After studying the [REDACTED] that we [REDACTED], we [REDACTED] the [REDACTED] and then [REDACTED] the [REDACTED] in order to create the Astria Porta. Combined with nine Astria Porta Support Segments, the Astria Porta forms a jumpgate that enables users to instantly traverse vast distances to a desired destination gate.
	attachRules = 1,0,1,1,1
	mass = 36
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 20
	breakingForce = 20000
	breakingTorque = 20000
	maxTemp = 2500 // way hotter than the melting point of "Ore" but oh well.
	explosionPotential = 1.0
	vesselType = Probe
	skinInternalConductionMult = 100
	skinMassPerArea = 100
	tags = jumpgate cck-Blueshift

	MODULE
	{
		name = WBIJumpGate

		// Only gates with matching network IDs can connect to each other. Leave blank if the gate connects to any network.
		// If there are only two gates in the network then there is no need to select the other gate from the list.
		// You can add additional networks by adding a semicolon character in between network IDs.
		networkID = 4.8.15.16.23.42

		// If the gate has a limited jump range, then only those gates that are in the network and within range can be selected.
		// The exception is a network of two gates; max range is ignored.
		// Set to -1 (the default) for unlimited jump range.
		// Units are in light-years (9460700000000000 meters)
		maxJumpRange = -1

		// Maximum width and height of the vessel that the gate can support.
		jumpMaxDimensions = 24,24

		// Name of the portal trigger transform. The trigger is a collider set to Is Trigger in Unity.
		portalTriggerTransform = portalTrigger

		// Scale curve to use during startup. This should follow the Waterfall effect (if any).
		// During the startup sequence the Z-axis will be scaled according to this curve. Any vessel or vessel parts caught
		// by the portal trigger during startup will get vaporized unless "Jumpgates: desctructive startup" in Game Difficulty is disabled.
		triggerStartupScaleCurve
		{
			key = 0 1
			key = 0.25 1
			key = 0.625 50
			key = 1 1
		}		

		runningEffect = running

		// Name of the waterfall effect controller, if any.
		waterfallEffectController = gateEffectsController
	
		// In seconds, how quickly to throttle up the waterfall effect from 0 to 1.
		effectSpoolTime = 0.5

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 5

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 4

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 4

		// In order to jump a vessel, gates can require that the vessel pay a toll of one or more resources.
		// If the vessel doesn't have sufficient resources then it cannot jump. Simply add one or more Resource nodes.
		// The cost is per metric ton of the vessel.
		RESOURCE
		{
			name = Graviolium
			rate = 5
			FlowMode = STAGE_PRIORITY_FLOW
		}

		// Defines a resource that must be paid in order to reach the desired destination.
		// This node overrides the older RESOURCE node that defined the jump toll.
		RESOURCE_TOLL
		{
			// Name of the toll. This is mainly for ModuleManager purposes.
			name = planetarySOIToll

			// Price tier- one of: planetary, interplanetary, interstellar
			priceTier = planetary

			// Name of the resource
			resourceName = Graviolium

			// Amount of resource per metric tonne mass of the traveler
			amountPerTonne = 0.1

			// Resource is paid by the traveler that is initiating the jump
			paidByTraveler = false
		}
		RESOURCE_TOLL
		{
			name = interplanetaryToll
			priceTier = interplanetary
			resourceName = Graviolium
			amountPerTonne = 1
			paidByTraveler = false
		}
		RESOURCE_TOLL
		{
			name = interstellarToll
			priceTier = interstellar
			resourceName = Graviolium
			amountPerTonne = 5
			paidByTraveler = false
		}
	}

	// This is a helper module for jumpgates that are built insted of ones that are single-piece.
	MODULE
	{	
		name = WBIGateAssembler

		// List of segmented meshes that must be enabled in order for the jumpgate to become fully operational.
		// Each time an assembly sequence is initiated, one of the segmentMesh objects will be enabled in the order
		// that it appears in this list.
		segmentMesh = astriaPortaSupport001
		segmentMesh = astriaPortaSupport002
		segmentMesh = astriaPortaSupport003
		segmentMesh = astriaPortaSupport004
		segmentMesh = astriaPortaSupport005
		segmentMesh = astriaPortaSupport006
		segmentMesh = astriaPortaSupport007
		segmentMesh = astriaPortaSupport008
		segmentMesh = astriaPortaSupport009

		// Name of the part that forms part of the ring. This part will be decoupled and deleted from the
		// vessel when assembling the jumpgate. When that happens, one of the segmentMesh items will be
		// enabled. Once all the segmentMesh entries are enabled, the ring becomes fully operational.
		supportSegmentPartName = wbiAstriaPortaSupport

		// When fully assembed, where to place the center of mass
		assembledCoM = 0,13.05479,0

		portalTriggerTransform = portalTrigger
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		hasHibernation = True
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.03
		}
	}
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 1.5
		}
	}
	MODULE
	{
		name = ModuleSAS
		SASServiceLevel = 3
	}
	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 90
		YawTorque 90
		RollTorque = 90
		torqueResponseSpeed = 90
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.45
		}
	}
	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}		
	RESOURCE
	{
		name = ElectricCharge
		amount = 50.0
		maxAmount = 50.0
	}

// Begin Waterfall

MODULE
{
	name = ModuleWaterfallFX
	engineID = 
	CONTROLLER
	{
		name = gateEffectsController
		linkedTo = custom
	}
	EFFECT
	{
		name = portalEffect
		parentName = waterfallTransform
		MODEL
		{
			path = WildBlueIndustries/Blueshift/FX/Waterfall/jumpGatePortal
			positionOffset = 0,0,0
			rotationOffset = 90,0,0
			scaleOffset = 1.04999995,1.04999995,5
			MATERIAL
			{
				transform = portal
				shader = Waterfall/Additive Directional
				randomizeSeed = True
				TEXTURE
				{
					textureSlotName = _MainTex
					texturePath = Waterfall/FX/fx-noise-1
					textureScale = 1,1
					textureOffset = 0,0
				}
				COLOR
				{
					colorName = _EndTint
					colorValue = 0.407843143,0.800000012,1,1
				}
				COLOR
				{
					colorName = _StartTint
					colorValue = 0.839215696,0.996078432,0.992156863,1
				}
				FLOAT
				{
					floatName = _Brightness
					value = 0.443889767
				}
				FLOAT
				{
					floatName = _Noise
					value = 1.97166359
				}
				FLOAT
				{
					floatName = _Falloff
					value = 0.60666573
				}
				FLOAT
				{
					floatName = _SpeedY
					value = 5
				}
				FLOAT
				{
					floatName = _Fresnel
					value = 0
				}
				FLOAT
				{
					floatName = _TintFalloff
					value = 5
				}
			}
		}
		SCALEMODIFIER
		{
			name = scaleEffect
			controllerName = gateEffectsController
			transformName = WildBlueIndustries/Blueshift/FX/Waterfall/jumpGatePortal(Clone)
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			xCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 1.05 0 0
				key = 1 1.05 0 0
			}
			yCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 1.05 0 0
				key = 1 1.05 0 0
			}
			zCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 50 0 0
				key = 1 1.05 0 0
			}
		}
	}
	EFFECT
	{
		name = portalEffectRipple
		parentName = waterfallTransform
		MODEL
		{
			path = WildBlueIndustries/Blueshift/FX/Waterfall/jumpGatePortal
			positionOffset = 0,0,0
			rotationOffset = 90,0,0
			scaleOffset = 1.04999995,1.04999995,5
			MATERIAL
			{
				transform = portal
				shader = Waterfall/Additive Directional
				randomizeSeed = True
				TEXTURE
				{
					textureSlotName = _MainTex
					texturePath = Waterfall/FX/fx-noise-6
					textureScale = 1,1
					textureOffset = 0,0
				}
				COLOR
				{
					colorName = _EndTint
					colorValue = 0.407843143,0.800000012,1,1
				}
				COLOR
				{
					colorName = _StartTint
					colorValue = 0.839215696,0.996078432,0.992156863,1
				}
				FLOAT
				{
					floatName = _Brightness
					value = 0.140556902
				}
				FLOAT
				{
					floatName = _Noise
					value = 1.97166359
				}
				FLOAT
				{
					floatName = _Falloff
					value = 0.959999979
				}
				FLOAT
				{
					floatName = _SpeedY
					value = 15
				}
				FLOAT
				{
					floatName = _Fresnel
					value = 0
				}
				FLOAT
				{
					floatName = _TintFalloff
					value = 5
				}
			}
		}
		SCALEMODIFIER
		{
			name = scaleEffect
			controllerName = gateEffectsController
			transformName = WildBlueIndustries/Blueshift/FX/Waterfall/jumpGatePortal(Clone)
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			xCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 1.05 0 0
				key = 1 1.05 0 0
			}
			yCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 1.05 0 0
				key = 1 1.05 0 0
			}
			zCurve
			{
				key = 0 0 0 0
				key = 0.25 1.05 0 0
				key = 0.625 50 0 0
				key = 1 1.05 0 0
			}
		}
		FLOATMODIFIER
		{
			name = rippleBright
			controllerName = gateEffectsController
			transformName = portal
			combinationType = REPLACE
			useRandomness = False
			randomnessController = random
			randomnessScale = 1
			floatName = _Brightness
			floatCurve
			{
				key = 0 0 0 0
				key = 0.25 0.1405569 0 0
				key = 0.625 0.75 0 0
				key = 1 0.1405569 0 0
			}
		}
	}
}
// End Waterfall

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/jumpgateRunning
				volume = 0.0 0.0
				volume = 0.625 0.75
				volume = 1.0 1.5
				pitch = 0.0 0.0
				pitch = 0.625 0.75
				pitch = 1.0 1.0
				loop = true
			}

			MODEL_MULTI_PARTICLE
			{
				name = nozzles
				modelName = WildBlueIndustries/Blueshift/FX/jumpgateFX
				transformName = jumpgateParticleFX
				emission = 0.0 0.0
				emission = 0.25 1.0
				emission = 0.625 1.0
				emission = 1.0 0.0
				speed = 0.0 0.0
				speed = 0.25 1.0
				speed = 0.625 1.0
				speed = 1.0 0.0
				energy = 0.0 0.0
				energy = 0.25 1.0
				energy = 0.625 1.0
				energy = 1.0 0.0
			}
		}
	}
}