PART
{
	name = wbiAstriaPortaSupport
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Blueshift/Parts/Utility/JumpGate/astriaPortaSupport
		texture = WarpEngine, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/WarpEngine
		texture = WarpEngine1Emit, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/WarpEngine1Emit
		texture = Foil, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/Foil
		texture = FoilNrm, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/FoilNrm
		texture = FoilSpec, WildBlueIndustries/Blueshift/Parts/Engine/WarpTech/FoilSpec
	}

	node_stack_bottom = 0.0, -1.52014, 0.0, 0.0, -1.0, 0.0, 1

	NODE
	{
		name = Mount1
		transform = node001
		size = 2
	}

	NODE
	{
		name = Mount2
		transform = node002
		size = 2
	}

	rescaleFactor = 1
	TechRequired = wbiJumpTech
	entryCost = 15000000
	cost = 5000000
	category = Utility
	subcategory = 0
	title = Astria Porta Auxilium
	manufacturer = <CLASSIFIED>
	description = Combined with the Astria Porta Arbitrium, the Auxilium forms part of a jumpgate that enables users to instantly traverse vast distances to a desired destination gate.
	attachRules = 1,0,1,1,1
	mass = 36
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 20
	breakingForce = 20000
	breakingTorque = 20000
	maxTemp = 2500 // way hotter than the melting point of "Ore" but oh well.
	explosionPotential = 1.0
	vesselType = Probe
	skinInternalConductionMult = 100
	skinMassPerArea = 100
	tags = jumpgate cck-Blueshift

	// This is a helper module for jumpgates that are built insted of ones that are single-piece.
	// It attempts to find other WBIGateAssemblyChecker modules within the vessel.
	// It expects to see something like: <ring segment> - <docking port> <docking port> - <ring segment>
	// It can also handle: <ring segment> - <ring segment> - <ring segment>
	// If the above configurations aren't met then the WBIJumpGate module will be disabled.
	// Since this module does NOT appear in the same part as WBIJumpGate, it will NOT do the checking.
	MODULE
	{	
		name = WBIGateAssemblyChecker

		// Expected number of segments (parts with WBIGateAssemblyChecker modules) that comprise a completed jumpgate.
		totalSegments = 10

		// The name of the node to check for other gate segments.
		primaryNodeName = Mount1

		// The secondary name of the node to check for other gate segments. Can be empty.
		secondaryNodeName = Mount2
	}
}